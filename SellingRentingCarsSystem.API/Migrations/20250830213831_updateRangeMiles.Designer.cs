// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SellingRentingCarsSystem.API.Data;

#nullable disable

namespace SellingRentingCarsSystem.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250830213831_updateRangeMiles")]
    partial class updateRangeMiles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Aspiration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("Aspirations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47aa3acdb58a",
                            TypeName = "Forced Induction"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47abace73521",
                            TypeName = "Naturally Aspirated"
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.BodyType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DoorCount")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName", "DoorCount")
                        .IsUnique();

                    b.ToTable("BodyTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47916546c9a9",
                            DoorCount = 2,
                            TypeName = "Convertible"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479224bb6185",
                            DoorCount = 4,
                            TypeName = "Convertible"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47938977ae7c",
                            DoorCount = 2,
                            TypeName = "Coupe"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479495a61551",
                            DoorCount = 4,
                            TypeName = "Crossover"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479df0e1384b",
                            DoorCount = 4,
                            TypeName = "Wagon"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-4795267320fb",
                            DoorCount = 2,
                            TypeName = "Hatchback"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-4796ba3aa031",
                            DoorCount = 4,
                            TypeName = "Hatchback"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479737348d88",
                            DoorCount = 3,
                            TypeName = "Minivan"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-4798ee6d43e4",
                            DoorCount = 4,
                            TypeName = "Minivan"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-4799f3cd22ef",
                            DoorCount = 2,
                            TypeName = "Pickup Truck"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479ae1fe64af",
                            DoorCount = 4,
                            TypeName = "Pickup Truck"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479ba551f176",
                            DoorCount = 4,
                            TypeName = "Sedan"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479cc5b9e724",
                            DoorCount = 4,
                            TypeName = "SUV"
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Booking", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExpectedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("VehicleID");

                    b.ToTable("Bookings", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.ChargePort", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PortName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("PortName")
                        .IsUnique();

                    b.ToTable("ChargePorts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479ec048048e",
                            PortName = "CCS (Combined Charging System)"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479fd7feef0b",
                            PortName = "CHAdeMO"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a09b2b2ce9",
                            PortName = "GB/T"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a1e5ec96c5",
                            PortName = "J1772"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a2c8a011dd",
                            PortName = "Mennekes - AC Charging"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a3a8bca916",
                            PortName = "Tesla Connector NACS"
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("NID")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Feature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureName", "Category")
                        .IsUnique();

                    b.ToTable("Features", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-702eb7394e98",
                            Category = "Convenience",
                            FeatureName = "Sunshades (Rear Window & Side Windows)"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-702d71db424a",
                            Category = "Convenience",
                            FeatureName = "Cooled Glovebox"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-702cc0220f1c",
                            Category = "Convenience",
                            FeatureName = "Heated Steering Wheel"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-702b5f744319",
                            Category = "Convenience",
                            FeatureName = "Auto-Dimming Rearview Mirror"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-702a24c2763b",
                            Category = "Convenience",
                            FeatureName = "Rain-Sensing Wipers"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-70297bcbdbf1",
                            Category = "Convenience",
                            FeatureName = "Automatic Parking Assist"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-7028fbd4a0a6",
                            Category = "Convenience",
                            FeatureName = "Remote Start"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-70271bc46020",
                            Category = "Cargo & Practicality",
                            FeatureName = "Underfloor Storage"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-7026eac881b3",
                            Category = "Cargo & Practicality",
                            FeatureName = "Cargo Net"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-7025efdce2c7",
                            Category = "Cargo & Practicality",
                            FeatureName = "Cargo Cover / Tonneau Cover"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-702496604deb",
                            Category = "Cargo & Practicality",
                            FeatureName = "Hands-Free Power Tailgate (open with foot motion)"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-7023071ea551",
                            Category = "Cargo & Practicality",
                            FeatureName = "Fold-Flat Passenger Seat"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-702227a1987c",
                            Category = "Cargo & Practicality",
                            FeatureName = "Split-Folding Rear Seats (60/40)"
                        },
                        new
                        {
                            Id = "0198fce0-8cc9-767f-84cf-30b75ca9a719",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Tire Pressure Monitoring System (TPMS)"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-7021e101a654",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Electronic Stability Control"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-70204277ab61",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Traction Control"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-701feec0e253",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Hill Descent Control"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7b-7130-aa6c-701ee8be51aa",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Parking Sensors (Front & Rear)"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d6d08df5abc",
                            Category = "Infotainment & Technology",
                            FeatureName = "360-Degree Camera"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d6ca4a86e86",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Lane Departure Warning"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d6b089fe7ee",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Pedestrian Detection"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d6a733e8b02",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Automatic Emergency Braking"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d69982d09b3",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Forward Collision Warning"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d6545056006",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Adaptive Cruise Control"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d665c4f6b7d",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Lane Keep Assist"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d67e9c00727",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Blind Spot Monitoring"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d685fe255d6",
                            Category = "Safety & Driver Assistance",
                            FeatureName = "Rear Cross Traffic Alert"
                        },
                        new
                        {
                            Id = "0198c3bb-6f7a-7184-b3f8-8d644baa9b86",
                            Category = "Infotainment & Technology",
                            FeatureName = "Rear Seat Entertainment (e.g., headrest screens)"
                        },
                        new
                        {
                            Id = "0198c3bb-6f78-7ea6-a82d-54a9932fc0c1",
                            Category = "Infotainment & Technology",
                            FeatureName = "Multiple USB Ports / USB-C Ports"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da96cc8be799",
                            Category = "Infotainment & Technology",
                            FeatureName = "Wireless Charging Pad"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da95f5adcfac",
                            Category = "Infotainment & Technology",
                            FeatureName = "In-Car Wi-Fi Hotspot"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da948b0ca775",
                            Category = "Infotainment & Technology",
                            FeatureName = "HD Radio"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da93bdb3f109",
                            Category = "Infotainment & Technology",
                            FeatureName = "Satellite Radio (e.g., SiriusXM)"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da923058318c",
                            Category = "Infotainment & Technology",
                            FeatureName = "Upgraded Sound System (e.g., \"Premium\" tier)"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da91590c6685",
                            Category = "Infotainment & Technology",
                            FeatureName = "Premium Sound System (e.g., Bose, Harman Kardon)"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da900ee6bc93",
                            Category = "Infotainment & Technology",
                            FeatureName = "Navigation System"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da8db366cb87",
                            Category = "Infotainment & Technology",
                            FeatureName = "Bluetooth Connectivity"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da8e1322aecf",
                            Category = "Infotainment & Technology",
                            FeatureName = "Apple CarPlay"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da8fc8fa85cb",
                            Category = "Infotainment & Technology",
                            FeatureName = "Android Auto"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da8cfb6d753d",
                            Category = "Interior & Comfort",
                            FeatureName = "Triple-Zone Climate Control"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da8b0551855f",
                            Category = "Interior & Comfort",
                            FeatureName = "Dual-Zone Climate Control"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da8a78158876",
                            Category = "Interior & Comfort",
                            FeatureName = "Ambient Interior Lighting"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da8966841e38",
                            Category = "Interior & Comfort",
                            FeatureName = "Push Button Start"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da882ca8857b",
                            Category = "Interior & Comfort",
                            FeatureName = "Keyless Entry"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da87bb6e7f76",
                            Category = "Interior & Comfort",
                            FeatureName = "Heads-Up Display (HUD)"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da86bf2fd67a",
                            Category = "Interior & Comfort",
                            FeatureName = "Panoramic Glass Roof"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da85da2a2899",
                            Category = "Interior & Comfort",
                            FeatureName = "Wood/Alloy Interior Trim"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da846d833585",
                            Category = "Interior & Comfort",
                            FeatureName = "Memory Seats ( remembers position for multiple drivers)"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da83d1d7b381",
                            Category = "Interior & Comfort",
                            FeatureName = "Power Adjustable Seats"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da827fa92c10",
                            Category = "Interior & Comfort",
                            FeatureName = "Massaging Seats"
                        },
                        new
                        {
                            Id = "0198c3aa-45cc-712f-b1b0-da8160602b1b",
                            Category = "Interior & Comfort",
                            FeatureName = "Ventilated (Cooled) Seats"
                        },
                        new
                        {
                            Id = "0198c3aa-45cb-7105-b8d4-7a3d009a1e3b",
                            Category = "Interior & Comfort",
                            FeatureName = "Leather Seats"
                        },
                        new
                        {
                            Id = "0198c3aa-45cb-7105-b8d4-7a3efbeea60f",
                            Category = "Interior & Comfort",
                            FeatureName = "Heated Seats"
                        },
                        new
                        {
                            Id = "0198c3aa-45cb-7105-b8d4-7a3c9a38c7ca",
                            Category = "Exterior Features",
                            FeatureName = "Power Tailgate / Liftgate"
                        },
                        new
                        {
                            Id = "0198c3aa-45cb-7105-b8d4-7a3bad4a44b8",
                            Category = "Exterior Features",
                            FeatureName = "Heated Side Mirrors"
                        },
                        new
                        {
                            Id = "0198c3aa-45cb-7105-b8d4-7a3a24fe9317",
                            Category = "Exterior Features",
                            FeatureName = "Automatic Headlights"
                        },
                        new
                        {
                            Id = "0198c3aa-45cb-7105-b8d4-7a391bccb1e7",
                            Category = "Exterior Features",
                            FeatureName = "LED Headlights"
                        },
                        new
                        {
                            Id = "0198c3aa-45cb-7105-b8d4-7a38e767a25f",
                            Category = "Exterior Features",
                            FeatureName = "Fog Lights"
                        },
                        new
                        {
                            Id = "0198c3aa-45cb-7105-b8d4-7a377a7f7e54",
                            Category = "Exterior Features",
                            FeatureName = "Premium Wheels"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-061210e66588",
                            Category = "Exterior Features",
                            FeatureName = "Alloy Wheels"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-0611314b61ba",
                            Category = "Exterior Features",
                            FeatureName = "Tow Hitch"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-0610ae354f6e",
                            Category = "Exterior Features",
                            FeatureName = "Running Boards / Side Steps"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-060f479a835d",
                            Category = "Exterior Features",
                            FeatureName = "Roof Rack"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-060eac154948",
                            Category = "Exterior Features",
                            FeatureName = "Panoramic Roof"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-060d0213d065",
                            Category = "Exterior Features",
                            FeatureName = "Sunroof / Moonroof"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-060c687bbb70",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Adaptive Suspension"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-060be490422a",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Plug-in Hybrid (PHEV)"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-060a9c6c314a",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Electric Vehicle (EV)"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-06092e931a95",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Hybrid Engine"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-0608192c9e37",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Sport Mode"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-06076d236f30",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Paddle Shifters"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-0606abe14a04",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Turbocharged Engine"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-0603bdb0daae",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Rear-Wheel Drive (RWD)"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-0602419f4278",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Front-Wheel Drive (FWD)"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-0600cbd16aa9",
                            Category = "Performance & Drivetrain",
                            FeatureName = "All-Wheel Drive (AWD)"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-060112f409e1",
                            Category = "Performance & Drivetrain",
                            FeatureName = "Four-Wheel Drive (4WD)"
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.FuelDelivery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("FuelDeliveries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a9e03b9c8d",
                            TypeName = "Single Point Fuel Injection"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a8923e476f",
                            TypeName = "Sequential Fuel Injection"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a76a7833ff",
                            TypeName = "Multi Point Fuel Injection"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a66e3bc0e9",
                            TypeName = "EFI (Electronic Fuel Injection)"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a5de2fab4e",
                            TypeName = "Direct Injection"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-47a4b56add0f",
                            TypeName = "Carburetor"
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.FuelType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("FuelTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-478e327a78d4",
                            TypeName = "Petrol"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-478f770543a1",
                            TypeName = "Diesel"
                        },
                        new
                        {
                            Id = "0198c34a-8ba0-7089-a560-479090f26269",
                            TypeName = "Gas"
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int>("SizeInBytes")
                        .HasColumnType("int");

                    b.Property<string>("VehicleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ImageName")
                        .IsUnique();

                    b.HasIndex("VehicleID");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Maintenance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("DoneAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VehicleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentID")
                        .IsUnique();

                    b.HasIndex("VehicleID");

                    b.ToTable("Maintenances", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Make", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MakeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MakeName", "CountryOfOrigin")
                        .IsUnique();

                    b.ToTable("Makes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05fd1317ca31",
                            CountryOfOrigin = "France",
                            MakeName = "Citroën"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05fce8a8f028",
                            CountryOfOrigin = "France",
                            MakeName = "Peugeot"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05fbc97db652",
                            CountryOfOrigin = "France",
                            MakeName = "Renault"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05f78cfa2c49",
                            CountryOfOrigin = "United Kingdom",
                            MakeName = "McLaren"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05f63f70a55f",
                            CountryOfOrigin = "United Kingdom",
                            MakeName = "Aston Martin"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb503b2475ae",
                            CountryOfOrigin = "United Kingdom",
                            MakeName = "Land Rover"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb4f79aff6cb",
                            CountryOfOrigin = "United Kingdom",
                            MakeName = "Bentley"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb4e756173da",
                            CountryOfOrigin = "United Kingdom",
                            MakeName = "Rolls-Royce"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05ff09903782",
                            CountryOfOrigin = "Sweden",
                            MakeName = "Koenigsegg"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05fe77215249",
                            CountryOfOrigin = "Sweden",
                            MakeName = "Volvo"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05fa405cc86c",
                            CountryOfOrigin = "South Korea",
                            MakeName = "Genesis"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05f92a0ccae6",
                            CountryOfOrigin = "South Korea",
                            MakeName = "Kia"
                        },
                        new
                        {
                            Id = "0198c37d-3f7a-794d-907c-05f821e2d517",
                            CountryOfOrigin = "South Korea",
                            MakeName = "Hyundai"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            CountryOfOrigin = "Germany",
                            MakeName = "Porsche"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            CountryOfOrigin = "Germany",
                            MakeName = "Volkswagen"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            CountryOfOrigin = "Germany",
                            MakeName = "Audi"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            CountryOfOrigin = "Germany",
                            MakeName = "BMW"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            CountryOfOrigin = "Germany",
                            MakeName = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e8622c1b476",
                            CountryOfOrigin = "Germany",
                            MakeName = "Mercedes-AMG"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb4d9819449d",
                            CountryOfOrigin = "Italy",
                            MakeName = "Fiat"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb4cda2d732c",
                            CountryOfOrigin = "Italy",
                            MakeName = "Maserati"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb4b5d07ad26",
                            CountryOfOrigin = "Italy",
                            MakeName = "Lamborghini"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb4acc2e0ea9",
                            CountryOfOrigin = "Italy",
                            MakeName = "Ferrari"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb49899f39ab",
                            CountryOfOrigin = "United States",
                            MakeName = "Jeep"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb484534d0b6",
                            CountryOfOrigin = "United States",
                            MakeName = "Cadillac"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb47602a3691",
                            CountryOfOrigin = "United States",
                            MakeName = "Tesla"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb467c2ffef0",
                            CountryOfOrigin = "United States",
                            MakeName = "Chevrolet "
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            CountryOfOrigin = "United States",
                            MakeName = "Ford"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb44dfe5fa02",
                            CountryOfOrigin = "Japan",
                            MakeName = "Acura"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb43b4d761ee",
                            CountryOfOrigin = "Japan",
                            MakeName = "Lexus"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb42030db51d",
                            CountryOfOrigin = "Japan",
                            MakeName = "Subaru"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb416a06793c",
                            CountryOfOrigin = "Japan",
                            MakeName = "Mazda"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb40b5453d55",
                            CountryOfOrigin = "Japan",
                            MakeName = "Nissan"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb3fe3807112",
                            CountryOfOrigin = "Japan",
                            MakeName = "Honda"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb3e1d7cfe11",
                            CountryOfOrigin = "Japan",
                            MakeName = "Toyota"
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Model", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MakeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MakeID");

                    b.ToTable("Models", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e9bc6bd2f6a",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "G63",
                            ProductionYear = 2000
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e9a4b2b6ad4",
                            MakeID = "0198e28b-9717-7847-84b0-8e8622c1b476",
                            ModelName = "GT",
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e9931eb311d",
                            MakeID = "0198e28b-9717-7847-84b0-8e8622c1b476",
                            ModelName = "E63",
                            ProductionYear = 2000
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e988b89b3df",
                            MakeID = "0198e28b-9717-7847-84b0-8e8622c1b476",
                            ModelName = "C63",
                            ProductionYear = 2008
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e9fd49e0cc2",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "EQE SUV",
                            ProductionYear = 2023
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e9e07da2ab0",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "EQS SUV",
                            ProductionYear = 2023
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e9da4e387d4",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "EQE",
                            ProductionYear = 2023
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e9cff5178f4",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "EQS",
                            ProductionYear = 2022
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e97b1b1ceff",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "SLC",
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e967eafdcb8",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "SL",
                            ProductionYear = 1954
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e9484765184",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "C-Class Coupe / Cabriolet",
                            ProductionYear = 2000
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e95abfab309",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "S-Class Coupe / Cabriolet",
                            ProductionYear = 2000
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e931046377e",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "E-Class Coupe / Cabriolet",
                            ProductionYear = 2000
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e92f6f95b36",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "CLS",
                            ProductionYear = 2005
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e918b552f89",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "CLA",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e90de03298b",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "G_Class",
                            ProductionYear = 1979
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e8f3877be23",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "GLS",
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e8d5d0b99a4",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "GLC",
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e8e21e574d5",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "GLE",
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e8b9de5871b",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "GLA",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e8c7bf23728",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "GLB",
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e8a7fd7794b",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "Maybach S-Class",
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e88425fc584",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "E-Class",
                            ProductionYear = 1994
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e89e5b712ef",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "S-Class",
                            ProductionYear = 1972
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e8622c1b476",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "A-Class",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8e876d8ec0db",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb39ddf12628",
                            ModelName = "C-Class",
                            ProductionYear = 1994
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be5db7f4d08c",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "R8",
                            ProductionYear = 2008
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be5cb7efbe40",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "TT",
                            ProductionYear = 2000
                        },
                        new
                        {
                            Id = "0198fcea-2b2e-7342-97c1-7f19bfdf2ba7",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "e-tron GT / RS e-tron GT",
                            ProductionYear = 2022
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be5aacfa6216",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "Q8 e-tron / Sportback",
                            ProductionYear = 2024
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be5b610c5874",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "Q4 e-tron / Q4 Sportback e-tron",
                            ProductionYear = 2022
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be5947135eb2",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "RS Q8",
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be584c8dddbe",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "SQ8",
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be577543b39f",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "SQ7",
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be56ce66269c",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "SQ5",
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be55865b904a",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "e-tron Q8",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be54ddbca10c",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "Q8",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be53a5abb3f8",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "Q7",
                            ProductionYear = 2007
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be52f88eb15e",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "Q5",
                            ProductionYear = 2009
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be51fd7ad11f",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "Q3",
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be4e2e651c47",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "RS 6 Avant",
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be50d5c7f7c5",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "RS e tron GT",
                            ProductionYear = 2022
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be4fa4204b9d",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "RS 7",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be4d1e570f4d",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "RS 5",
                            ProductionYear = 2010
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be4c6c633f03",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "RS 3",
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be4b3e1ba6f7",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "A8",
                            ProductionYear = 1997
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be4a65870834",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "A7",
                            ProductionYear = 2011
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be49911cd930",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "A6",
                            ProductionYear = 1995
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be475c020ef1",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "A5",
                            ProductionYear = 2008
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be463d8c74b2",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "A4",
                            ProductionYear = 1996
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be45403a4bba",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "A3",
                            ProductionYear = 2006
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be4862547e51",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3bcf5b9f28",
                            ModelName = "S5",
                            ProductionYear = 2008
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be44b89dd2a9",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "IX_3",
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be43372bf1f9",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "IX",
                            ProductionYear = 2022
                        },
                        new
                        {
                            Id = "0198e2ad-eca1-7d38-83df-51104e5e4638",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "I7",
                            ProductionYear = 2023
                        },
                        new
                        {
                            Id = "0198e28b-9718-72e3-a30e-94514e4e1d7b",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "I5",
                            ProductionYear = 2024
                        },
                        new
                        {
                            Id = "0198e28b-9718-72e3-a30e-9450a51b9527",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "I4",
                            ProductionYear = 2022
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eb55dc5dfda",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "X6 M",
                            ProductionYear = 2010
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eb407018c3d",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "X5 M",
                            ProductionYear = 2010
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eb33420a274",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "X4 M",
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eb22bd0cb07",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "X3 M",
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eb15bb48c6c",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "M5",
                            ProductionYear = 1985
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eb050d29140",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "M4",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eaf4e260592",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "M3",
                            ProductionYear = 1986
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eae35fbea06",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "M2",
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eadc04ca785",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "Z4",
                            ProductionYear = 2003
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eaac70e1e9c",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "2 Series Coupe",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eabc4d712b7",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "4 Series Coupe / Convertible / Gran Coupe",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8eacddb6aab0",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "8 Series Coupe / Convertible",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea94e6a0cd0",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "XM",
                            ProductionYear = 2023
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea0b2f4db64",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "2 Series",
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea16f9b90f0",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "3 Series",
                            ProductionYear = 1975
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea2e2f2242a",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "5 Series",
                            ProductionYear = 1972
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea32da6f641",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "7 Series",
                            ProductionYear = 1977
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea4be5b3cdf",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "8 Series Gran Coupe",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea540397d43",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "X1",
                            ProductionYear = 2013
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea6a0e37f4a",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "X3",
                            ProductionYear = 2004
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea7714f206b",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "X5",
                            ProductionYear = 2000
                        },
                        new
                        {
                            Id = "0198e28b-9717-7847-84b0-8ea8b0533a96",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3a07312fa6",
                            ModelName = "X7",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d76bcf2595c",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "911",
                            ProductionYear = 1964
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d77b314a2a5",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "718 Boxster",
                            ProductionYear = 1996
                        },
                        new
                        {
                            Id = "0198fc51-7954-7eb0-aea6-6dfa0a7f8ea8",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "918 Spyder",
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d7842baa732",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "718 Cayman",
                            ProductionYear = 2006
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d7997c2aefd",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "911 GT3 / GT3 RS",
                            ProductionYear = 1999
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d7aacc1f47e",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "911 Turbo / Turbo S",
                            ProductionYear = 1975
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d7b11fee6f4",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "Panamera",
                            ProductionYear = 2010
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d7c0c8e5dac",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "Taycan",
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d7d232334eb",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "Cayenne",
                            ProductionYear = 2003
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d7e98aeb9fb",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3d5e8f8ba5",
                            ModelName = "Macan",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be69b84f0248",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Eos",
                            ProductionYear = 2006
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be684f3916bd",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Beetle",
                            ProductionYear = 1938
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be67c8cf5f12",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "ID. Buzz",
                            ProductionYear = 2024
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be668f9785ab",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Golf SportWagen",
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be5e2c0e43b0",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Golf",
                            ProductionYear = 1975
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be6550034c31",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Atlas Cross Sport",
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be64de9b5a04",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Atlas",
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be632a9312d4",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Tiguan",
                            ProductionYear = 2009
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be62eecc17a3",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Taos",
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be614ea5cae7",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Arteon",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be604a314dc1",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Passat",
                            ProductionYear = 1990
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be5f5d037cf9",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb3c21ba398f",
                            ModelName = "Jetta",
                            ProductionYear = 1980
                        },
                        new
                        {
                            Id = "0198fc51-7953-72d6-891c-0d75ea7dc67f",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "GT",
                            ProductionYear = 2005
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be7349a97b7b",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Taurus",
                            ProductionYear = 1986
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be725111527f",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Focus",
                            ProductionYear = 2000
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be71069b7f6e",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Fusion",
                            ProductionYear = 2006
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be70a8031a41",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Mustang",
                            ProductionYear = 1965
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be6fad4840c5",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Mustang Mach-E",
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be6e1be98152",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Edge",
                            ProductionYear = 2007
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be6d46b55647",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Escape",
                            ProductionYear = 2001
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be6c182006bf",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Bronco",
                            ProductionYear = 1996
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be6bb5b0e1b5",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Expedition",
                            ProductionYear = 1997
                        },
                        new
                        {
                            Id = "0198e2ad-eca3-7bfb-bbf3-be6a8a1c8c4e",
                            MakeID = "0198c363-eb2b-7b9d-9d0f-eb45c6dea49c",
                            ModelName = "Explorer",
                            ProductionYear = 1991
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateOfPay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Receive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.PowerTrain", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AspirationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("BatteryCapacityKWh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChargePortID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("CombinedRangeMiles")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Cylinders")
                        .HasColumnType("int");

                    b.Property<decimal?>("ElectricOnlyRangeMiles")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float?>("EngineSize")
                        .HasColumnType("real");

                    b.Property<string>("FuelDeliveryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FuelTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HashCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<string>("PowerTrainType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Torque")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AspirationID");

                    b.HasIndex("ChargePortID");

                    b.HasIndex("FuelDeliveryID");

                    b.HasIndex("FuelTypeID");

                    b.HasIndex("HashCode")
                        .IsUnique();

                    b.ToTable("PowerTrains", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.RentVehicle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActualEndRentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("DamageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DamageDescription")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("EndAtMile")
                        .HasColumnType("int");

                    b.Property<decimal>("ExpectedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpectedEndRentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PayLater")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StartAtMile")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartRentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PaymentID")
                        .IsUnique()
                        .HasFilter("[PaymentID] IS NOT NULL");

                    b.HasIndex("VehicleID");

                    b.ToTable("RentVehicles", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.SellVehicle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PaymentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SellDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PaymentID")
                        .IsUnique();

                    b.HasIndex("VehicleID")
                        .IsUnique();

                    b.ToTable("SellVehicles", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.TransmissionType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("TransmissionTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb3818a1c58e",
                            TypeName = "Sequential Manual Transmission (SMT)"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb375f841792",
                            TypeName = "Intelligent Manual Transmission (iMS)"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb36db29defb",
                            TypeName = "Automated Manual Transmission"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb35b235b53b",
                            TypeName = "Continuously Variable Transmission (CVT)"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb34e43edba2",
                            TypeName = "Automatic Transmission"
                        },
                        new
                        {
                            Id = "0198c363-eb2b-7b9d-9d0f-eb336e0cb29f",
                            TypeName = "Manual Transmission"
                        });
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Vehicle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BodyTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExteriorColor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("InteriorColor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModelID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PassengerCount")
                        .HasColumnType("int");

                    b.Property<string>("PowerTrainID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RangeMiles")
                        .HasColumnType("int");

                    b.Property<string>("TransmissionTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("VehiclePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VehicleStatus")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeID");

                    b.HasIndex("ModelID");

                    b.HasIndex("PowerTrainID");

                    b.HasIndex("TransmissionTypeID");

                    b.HasIndex("VIN");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.VehicleFeature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeatureID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureID");

                    b.HasIndex("VehicleID");

                    b.ToTable("VehicleFeatures", (string)null);
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.VehicleTags", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehicleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TagID");

                    b.HasIndex("VehicleID");

                    b.ToTable("VehileTags");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.HasDiscriminator().HasValue("ApplicationUser");

                    b.HasData(
                        new
                        {
                            Id = "9a0d8d62-fad1-4803-b768-5d22153fd11c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f6c081f7-b116-45b5-af15-4c4f86ced16f",
                            Email = "admin.01@teml.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN.01@TEML.NET",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEA1pvzIjnBUTr57gNuymUnmM26JUFAf+TbP/tM6gzsB6F+/PGjxxRUBViHEjerQqdA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "A180686382BE42DDA62A4DAE3CA4C96D",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Booking", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Customer", "Customer")
                        .WithMany("Booking")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.Vehicle", "Vehicle")
                        .WithMany("Booking")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Image", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Vehicle", "Vehicle")
                        .WithMany("Images")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Maintenance", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Payment", "Payment")
                        .WithOne("Maintenance")
                        .HasForeignKey("SellingRentingCarsSystem.API.Models.Maintenance", "PaymentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.Vehicle", "Vehicle")
                        .WithMany("Maintenances")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Model", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Make", "Make")
                        .WithMany("Models")
                        .HasForeignKey("MakeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.PowerTrain", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Aspiration", "Aspiration")
                        .WithMany("PowerTrains")
                        .HasForeignKey("AspirationID");

                    b.HasOne("SellingRentingCarsSystem.API.Models.ChargePort", "ChargePort")
                        .WithMany("PowerTrains")
                        .HasForeignKey("ChargePortID");

                    b.HasOne("SellingRentingCarsSystem.API.Models.FuelDelivery", "FuelDelivery")
                        .WithMany("PowerTrains")
                        .HasForeignKey("FuelDeliveryID");

                    b.HasOne("SellingRentingCarsSystem.API.Models.FuelType", "FuleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("FuelTypeID");

                    b.Navigation("Aspiration");

                    b.Navigation("ChargePort");

                    b.Navigation("FuelDelivery");

                    b.Navigation("FuleType");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.RentVehicle", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Customer", "Customer")
                        .WithMany("RentVehicle")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.Payment", "Payment")
                        .WithOne("RentVehicle")
                        .HasForeignKey("SellingRentingCarsSystem.API.Models.RentVehicle", "PaymentID");

                    b.HasOne("SellingRentingCarsSystem.API.Models.Vehicle", "Vehicle")
                        .WithMany("RentVehicles")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.SellVehicle", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Customer", "Customer")
                        .WithMany("SellVehicle")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.Payment", "Payment")
                        .WithOne("SellVehicle")
                        .HasForeignKey("SellingRentingCarsSystem.API.Models.SellVehicle", "PaymentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.Vehicle", "Vehicle")
                        .WithOne("SellVehicle")
                        .HasForeignKey("SellingRentingCarsSystem.API.Models.SellVehicle", "VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Vehicle", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.BodyType", "BodyType")
                        .WithMany("Vehicles")
                        .HasForeignKey("BodyTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.Model", "Model")
                        .WithMany("Vehicles")
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.PowerTrain", "PowerTrain")
                        .WithMany("Vehicles")
                        .HasForeignKey("PowerTrainID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.TransmissionType", "TransmissionType")
                        .WithMany("Vehicles")
                        .HasForeignKey("TransmissionTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BodyType");

                    b.Navigation("Model");

                    b.Navigation("PowerTrain");

                    b.Navigation("TransmissionType");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.VehicleFeature", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Feature", "Feature")
                        .WithMany("VehicleFeatures")
                        .HasForeignKey("FeatureID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.Vehicle", "Vehicle")
                        .WithMany("VehicleFeatures")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.VehicleTags", b =>
                {
                    b.HasOne("SellingRentingCarsSystem.API.Models.Tag", "Tag")
                        .WithMany("VehileTags")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellingRentingCarsSystem.API.Models.Vehicle", "Vehicle")
                        .WithMany("VehileTags")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.ApplicationUser", b =>
                {
                    b.OwnsMany("SellingRentingCarsSystem.API.Models.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<string>("UserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ExpiresOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("RevokedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("RefreshTokens", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Aspiration", b =>
                {
                    b.Navigation("PowerTrains");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.BodyType", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.ChargePort", b =>
                {
                    b.Navigation("PowerTrains");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Customer", b =>
                {
                    b.Navigation("Booking");

                    b.Navigation("RentVehicle");

                    b.Navigation("SellVehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Feature", b =>
                {
                    b.Navigation("VehicleFeatures");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.FuelDelivery", b =>
                {
                    b.Navigation("PowerTrains");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.FuelType", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Make", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Model", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Payment", b =>
                {
                    b.Navigation("Maintenance");

                    b.Navigation("RentVehicle");

                    b.Navigation("SellVehicle");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.PowerTrain", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Tag", b =>
                {
                    b.Navigation("VehileTags");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.TransmissionType", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("SellingRentingCarsSystem.API.Models.Vehicle", b =>
                {
                    b.Navigation("Booking");

                    b.Navigation("Images");

                    b.Navigation("Maintenances");

                    b.Navigation("RentVehicles");

                    b.Navigation("SellVehicle");

                    b.Navigation("VehicleFeatures");

                    b.Navigation("VehileTags");
                });
#pragma warning restore 612, 618
        }
    }
}
